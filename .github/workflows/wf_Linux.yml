# https://help.github.com/en/actions/automating-your-workflow-with-github-actions
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/virtual-environments-for-github-hosted-runners
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#using-a-specific-shell
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-powershell
# https://github.com/actions/upload-artifact#where-does-the-upload-go
name: coreview-ps-Linux
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "docs/**"
  push:
    paths-ignore:
      - "**.md"
      - "docs/**"
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Display the path
        shell: pwsh
        run: echo ${env:PATH}
      - name: Version Display
        shell: pwsh
        run: $PSVersionTable
      - name: Bootstrap
        shell: pwsh
        run: ./.github/workflows/actions_bootstrap.ps1
      - name: Test and Build
        shell: pwsh
        run: Invoke-Build -File .\src\coreview-ps.build.ps1
      - name: Upload pester results
        uses: actions/upload-artifact@v3
        with:
          name: pester-results
          path: ./src/Artifacts/testOutput
          if-no-files-found: warn
      - name: Upload zip module archive build
        uses: actions/upload-artifact@v4
        with:
          name: zip-archive
          path: ./src/Archive/coreview-ps.zip
          if-no-files-found: warn
          overwrite: true

  deploy:
    needs: test

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: zip-archive
